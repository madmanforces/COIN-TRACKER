{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HSJ\\\\Desktop\\\\nellflix\\\\my-app\\\\src\\\\routes\\\\Coin.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useParams } from \"react-router\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Title = styled.h1`\nfont-size: 48px;\ncolor: #f5f6fa;\nfont-weight: 700;\n`;\n_c = Title;\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n_c2 = Loader;\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n_c3 = Container;\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c4 = Header;\n\nfunction Coin() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const {\n    coinId\n  } = useParams();\n  const {\n    state\n  } = useLocation();\n  const [info, setInfo] = useState();\n  const [priceInfo, setPriceInfo] = useState();\n  useEffect(() => {\n    (async () => {\n      const infoData = await (await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`)).json();\n      const priceData = await (await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)).json();\n      setInfo(infoData);\n      setPriceInfo(priceData);\n      setLoading(false);\n    })();\n  }, [coinId]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        children: (state === null || state === void 0 ? void 0 : state.name) || \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 18\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Coin, \"Q8ofeihWEoucxbUXb4XwoHkSzPQ=\", false, function () {\n  return [useParams, useLocation];\n});\n\n_c5 = Coin;\nexport default Coin;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"Loader\");\n$RefreshReg$(_c3, \"Container\");\n$RefreshReg$(_c4, \"Header\");\n$RefreshReg$(_c5, \"Coin\");","map":{"version":3,"sources":["C:/Users/HSJ/Desktop/nellflix/my-app/src/routes/Coin.tsx"],"names":["useEffect","useState","useLocation","useParams","styled","Title","h1","Loader","span","Container","div","Header","header","Coin","loading","setLoading","coinId","state","info","setInfo","priceInfo","setPriceInfo","infoData","fetch","json","priceData","name"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,cAAvC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,KAAK,GAAGD,MAAM,CAACE,EAAG;AACxB;AACA;AACA;AACA,CAJA;KAAMD,K;AAMN,MAAME,MAAM,GAAGH,MAAM,CAACI,IAAK;AAC3B;AACA;AACA,CAHA;MAAMD,M;AAIN,MAAME,SAAS,GAAGL,MAAM,CAACM,GAAI;AAC7B;AACA;AACA;AACA,CAJA;MAAMD,S;AAKN,MAAME,MAAM,GAAGP,MAAM,CAACQ,MAAO;AAC7B;AACA;AACA;AACA;AACA,CALA;MAAMD,M;;AAoEN,SAASE,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAEe,IAAAA;AAAF,MAAab,SAAS,EAA5B;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAYf,WAAW,EAA7B;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,EAAhC;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,EAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,YAAMsB,QAAQ,GAAG,MAAM,CACrB,MAAMC,KAAK,CAAE,wCAAuCP,MAAO,EAAhD,CADU,EAErBQ,IAFqB,EAAvB;AAGA,YAAMC,SAAS,GAAG,MAAM,CACtB,MAAMF,KAAK,CAAE,0CAAyCP,MAAO,EAAlD,CADW,EAEtBQ,IAFsB,EAAxB;AAGAL,MAAAA,OAAO,CAACG,QAAD,CAAP;AACAD,MAAAA,YAAY,CAACI,SAAD,CAAZ;AACAV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAVD;AAWD,GAZQ,EAYN,CAACC,MAAD,CAZM,CAAT;AAaA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,MAAD;AAAA,6BACE,QAAC,KAAD;AAAA,kBAAQ,CAAAC,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAES,IAAP,KAAe;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAIGZ,OAAO,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,GAAiC,IAJ3C;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA3BQD,I;UAEYV,S,EACDD,W;;;MAHXW,I;AA4BT,eAAeA,IAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useLocation, useParams } from \"react-router\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Title = styled.h1`\r\nfont-size: 48px;\r\ncolor: #f5f6fa;\r\nfont-weight: 700;\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\nconst Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\ninterface RouteParams {\r\n  coinId: string;\r\n}\r\ninterface RouteState {\r\n  name: string;\r\n}\r\n\r\ninterface InfoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\n\r\ninterface PriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\nfunction Coin() {\r\n  const [loading, setLoading] = useState(true);\r\n  const { coinId } = useParams<RouteParams>();\r\n  const { state } = useLocation<RouteState>();\r\n  const [info, setInfo] = useState<InfoData>();\r\n  const [priceInfo, setPriceInfo] = useState<PriceData>();\r\n  useEffect(() => {\r\n    (async () => {\r\n      const infoData = await (\r\n        await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`)\r\n      ).json();\r\n      const priceData = await (\r\n        await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)\r\n      ).json();\r\n      setInfo(infoData);\r\n      setPriceInfo(priceData);\r\n      setLoading(false);\r\n    })();\r\n  }, [coinId]);\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <Title>{state?.name || \"Loading...\"}</Title>\r\n      </Header>\r\n      {loading ? <Loader>Loading...</Loader> : null}\r\n    </Container>\r\n  );\r\n}\r\nexport default Coin;"]},"metadata":{},"sourceType":"module"}