[{"C:\\Users\\HSJ\\Desktop\\nellflix\\my-app\\src\\index.tsx":"1","C:\\Users\\HSJ\\Desktop\\nellflix\\my-app\\src\\App.tsx":"2","C:\\Users\\HSJ\\Desktop\\nellflix\\my-app\\src\\theme.ts":"3","C:\\Users\\HSJ\\Desktop\\nellflix\\my-app\\src\\Router.tsx":"4","C:\\Users\\HSJ\\Desktop\\nellflix\\my-app\\src\\routes\\Coin.tsx":"5","C:\\Users\\HSJ\\Desktop\\nellflix\\my-app\\src\\routes\\Coins.tsx":"6","C:\\Users\\HSJ\\Desktop\\nellflix\\my-app\\src\\routes\\Chart.tsx":"7","C:\\Users\\HSJ\\Desktop\\nellflix\\my-app\\src\\routes\\Price.tsx":"8","C:\\Users\\HSJ\\Desktop\\nellflix\\my-app\\src\\routes\\api.tsx":"9"},{"size":523,"mtime":1638259185281,"results":"10","hashOfConfig":"11"},{"size":1783,"mtime":1638283601564,"results":"12","hashOfConfig":"11"},{"size":172,"mtime":1638199730886,"results":"13","hashOfConfig":"11"},{"size":416,"mtime":1637245616869,"results":"14","hashOfConfig":"11"},{"size":5991,"mtime":1638286498751,"results":"15","hashOfConfig":"11"},{"size":2913,"mtime":1638260275338,"results":"16","hashOfConfig":"11"},{"size":80,"mtime":1637909885503,"results":"17","hashOfConfig":"11"},{"size":80,"mtime":1637909922191,"results":"18","hashOfConfig":"11"},{"size":480,"mtime":1638286859678,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vtop4l",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HSJ\\Desktop\\nellflix\\my-app\\src\\index.tsx",[],"C:\\Users\\HSJ\\Desktop\\nellflix\\my-app\\src\\App.tsx",[],"C:\\Users\\HSJ\\Desktop\\nellflix\\my-app\\src\\theme.ts",[],"C:\\Users\\HSJ\\Desktop\\nellflix\\my-app\\src\\Router.tsx",[],["41","42"],"C:\\Users\\HSJ\\Desktop\\nellflix\\my-app\\src\\routes\\Coin.tsx",["43","44"],"import { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Switch, Route, useLocation, useParams,useRouteMatch, } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"./api\";\r\nimport Chart from \"./Chart\";\r\nimport Price from \"./Price\";\r\n\r\nconst Title = styled.h1`\r\nfont-size: 48px;\r\ncolor: gold;\r\nfont-weight: 700;\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\nconst Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: white;\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  span:first-child {\r\n    font-size: 12px;\r\n    font-weight: 700;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n  font-weight: 500;\r\n  color: white\r\n`;\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 15px;\r\n  font-weight: 700;\r\n  background-color: white;\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  text-decoration: none;\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\n\r\ninterface RouteParams {\r\n  coinId: string;\r\n}\r\ninterface RouteState {\r\n  name: string;\r\n}\r\n\r\ninterface InfoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\n\r\ninterface PriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\nfunction Coin() {\r\n  const { coinId } = useParams<RouteParams>();\r\n  const { state } = useLocation<RouteState>();\r\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\r\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\r\n    [\"info\", coinId],\r\n    () => fetchCoinInfo(coinId)\r\n  );\r\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\r\n    [\"tickers\", coinId],\r\n    () => fetchCoinTickers(coinId)\r\n  );\r\n  const loading = infoLoading || tickersLoading;\r\n  /*  const [info, setInfo] = useState<InfoData>(); \r\n  const [loading, setLoading] = useState(true);\r\n  const [priceInfo, setPriceInfo] = useState<PriceData>();\r\n  useEffect(() => {\r\n    (async () => {\r\n      const infoData = await (\r\n        await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`)\r\n      ).json();\r\n      const priceData = await (\r\n        await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)\r\n      ).json();\r\n      setInfo(infoData);\r\n      setPriceInfo(priceData);\r\n      setLoading(false);\r\n    })();\r\n  }, [coinId]); */\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <Title>\r\n            {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </Title>\r\n      </Header>\r\n      {loading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>${infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Open Source:</span>\r\n              <span>{infoData?.open_source ? \"Yes\" : \"No\"}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Suply:</span>\r\n              <span>{tickersData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickersData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Tabs>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`/${coinId}/chart`}>Chart</Link>\r\n            </Tab>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to={`/${coinId}/price`}>Price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n\r\n          <Switch>\r\n            <Route path={`/:coinId/price`}>\r\n              <Price />\r\n            </Route>\r\n            <Route path={`/:coinId/chart`}>\r\n              <Chart />\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\nexport default Coin;","C:\\Users\\HSJ\\Desktop\\nellflix\\my-app\\src\\routes\\Coins.tsx",["45","46","47","48"],"import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport axios from 'axios';\r\nimport { useQuery } from \"react-query\";\r\nimport { fetchCoins } from \"./api\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst CoinsList = styled.ul``;\r\nconst Coin = styled.li`\r\n  background-color: white;\r\n  color: ${(props) => props.theme.bgColor};\r\n  border-radius: 15px;\r\n  margin-bottom: 10px;\r\n  a {\r\n    padding: 20px;\r\n    transition: color 0.2s ease-in;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.accentColor};\r\n    }\r\n  }\r\n`;\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: gold;\r\n  font-weight: 700;\r\n`;\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 35px;\r\n  height: 35px;\r\n  margin-right: 10px;\r\n`;\r\n\r\ninterface CoinInterface {\r\n    id: string;\r\n    name: string;\r\n    symbol: string;\r\n    rank: number;\r\n    is_new: boolean;\r\n    is_active: boolean;\r\n    type: string;\r\n}\r\n\r\ninterface RouteState {\r\n    name: string;\r\n  }\r\n\r\nfunction Coins() {\r\n    const {isLoading, data } = useQuery<CoinInterface[]>(\"allcoins\",fetchCoins)\r\n   /*  const [coins, setCoins] = useState<CoinInterface[]>([]);\r\n    const [loading, setLoading] = useState(true);\r\n    useEffect(() => {\r\n        (async () => {\r\n            const response = await axios.get(\"https://api.coinpaprika.com/v1/coins\");\r\n            setCoins(response.data.slice(0, 100));\r\n            setLoading(false);\r\n        })();\r\n    }, []); */\r\n    return (\r\n        <Container>\r\n            <Header>\r\n                <Title>SKYROKET</Title>\r\n            </Header>\r\n            {isLoading ? (\r\n                <Loader>순재코인떡상중</Loader>\r\n            ) : (\r\n                <CoinsList>\r\n                    {data?.slice(0, 100).map((coin) => (\r\n                        <Coin key={coin.id}>\r\n                            <Link\r\n                                to={{\r\n                                    pathname: `/${coin.id}`,\r\n                                    state: { name: coin.name },\r\n                                }}\r\n                            > \r\n                            \r\n                                \r\n                                <Img\r\n                                    src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                                />\r\n                                {coin.name} &rarr;\r\n                            </Link>\r\n\r\n                        </Coin>\r\n                    ))}\r\n                </CoinsList>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\nexport default Coins;","C:\\Users\\HSJ\\Desktop\\nellflix\\my-app\\src\\routes\\Chart.tsx",[],"C:\\Users\\HSJ\\Desktop\\nellflix\\my-app\\src\\routes\\Price.tsx",[],"C:\\Users\\HSJ\\Desktop\\nellflix\\my-app\\src\\routes\\api.tsx",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":10,"nodeType":"55","messageId":"56","endLine":1,"endColumn":19},{"ruleId":"53","severity":1,"message":"57","line":1,"column":21,"nodeType":"55","messageId":"56","endLine":1,"endColumn":29},{"ruleId":"53","severity":1,"message":"54","line":1,"column":10,"nodeType":"55","messageId":"56","endLine":1,"endColumn":19},{"ruleId":"53","severity":1,"message":"57","line":1,"column":21,"nodeType":"55","messageId":"56","endLine":1,"endColumn":29},{"ruleId":"53","severity":1,"message":"58","line":4,"column":8,"nodeType":"55","messageId":"56","endLine":4,"endColumn":13},{"ruleId":"53","severity":1,"message":"59","line":64,"column":11,"nodeType":"55","messageId":"56","endLine":64,"endColumn":21},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'axios' is defined but never used.","'RouteState' is defined but never used.","no-global-assign","no-unsafe-negation"]